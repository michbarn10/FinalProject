{"remainingRequest":"/Users/michaelbarney/CS260/cp4/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/michaelbarney/CS260/cp4/front-end/src/components/MovieList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/michaelbarney/CS260/cp4/front-end/src/components/MovieList.vue","mtime":1618420785962},{"path":"/Users/michaelbarney/CS260/cp4/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/michaelbarney/CS260/cp4/front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/michaelbarney/CS260/cp4/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/michaelbarney/CS260/cp4/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTW92aWVMaXN0IiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlclJldmlldzogW10sCiAgICAgIHJldmlld05hbWU6IFtdLAogICAgICBmaWxlOiBudWxsLAogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBtb3ZpZXM6IEFycmF5LAogIH0sCiAgbWV0aG9kczogewogICAgYWRkVG9UaGVhdHJlKG1vdmllKSB7CiAgICAgIHRoaXMuJHJvb3QuJGRhdGEudGhlYXRyZS5wdXNoKG1vdmllKTsKICAgIH0sCiAgICBhc3luYyB1cGxvYWQoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoInBob3RvIiwgdGhpcy5maWxlLCB0aGlzLmZpbGUubmFtZSk7CiAgICAgICAgbGV0IHIxID0gYXdhaXQgYXhpb3MucG9zdCgiL2FwaS9Qcm9maWxlUGljdHVyZXMiLCBmb3JtRGF0YSk7CiAgICAgICAgbGV0IHIyID0gYXdhaXQgYXhpb3MucG9zdCgiL2FwaS9SZXZpZXciLCB7CiAgICAgICAgICByZXZpZXdOYW1lOiB0aGlzLnJldmlld05hbWUsCiAgICAgICAgICB1c2VyUmV2aWV3OiB0aGlzLnVzZXJSZXZpZXcsCiAgICAgICAgICBwcm9maWxlUGljdHVyZTogcjEuZGF0YS5maWxlTmFtZSwKICAgICAgICB9KTsKICAgICAgICBhbGVydChyMi5kYXRhKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["MovieList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MovieList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"movies\">\n      <div class=\"movie\" v-for=\"(movie, index) in movies\" :key=\"movie.id\">\n        <div class=\"image\">\n          <img :src=\"require(`@/assets/Movies/${movie.image}`)\" />\n        </div>\n        <div class=\"info\">\n          <h1>{{ movie.rating }}</h1>\n          <h2>{{ movie.year }}</h2>\n          <p>{{ movie.genre }}</p>\n        </div>\n        <div class=\"name\">\n          <h3>{{ movie.name }}</h3>\n        </div>\n        <div class=\"review\">\n          <div class=\"reviewName\">\n            <input\n              type=\"text\"\n              v-model=\"reviewName[index]\"\n              placeholder=\"Type your name here...\"\n            />\n          </div>\n          <input\n            type=\"text\"\n            v-model=\"userReview[index]\"\n            placeholder=\"Type your review here...\"\n          />\n          <input type=\"file\" name=\"photo\" @change=\"fileChanged\" />\n          <button @click=\"upload\">Add Profile Picture</button>\n          <button @click=\"addReview(index)\">Publish Review</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"MovieList\",\n  data() {\n    return {\n      userReview: [],\n      reviewName: [],\n      file: null,\n    };\n  },\n  props: {\n    movies: Array,\n  },\n  methods: {\n    addToTheatre(movie) {\n      this.$root.$data.theatre.push(movie);\n    },\n    async upload() {\n      try {\n        const formData = new FormData();\n        formData.append(\"photo\", this.file, this.file.name);\n        let r1 = await axios.post(\"/api/ProfilePictures\", formData);\n        let r2 = await axios.post(\"/api/Review\", {\n          reviewName: this.reviewName,\n          userReview: this.userReview,\n          profilePicture: r1.data.fileName,\n        });\n        alert(r2.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.movies {\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.movie {\n  margin: 10px;\n  margin-top: 50px;\n  width: 200px;\n}\n\n.movie img {\n  border: 2px solid #333;\n  height: 250px;\n  width: 200px;\n  object-fit: cover;\n}\n\n.movie .image {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 7px;\n}\n\n.info {\n  background: #8b0000;\n  border-radius: 5px;\n  color: rgb(255, 255, 255);\n  padding: 10px 30px;\n  height: 110px;\n}\n\n.info h1 {\n  font-size: 16px;\n  background: #8b0000;\n}\n\n.info h2 {\n  font-size: 14px;\n  background: #8b0000;\n}\n\n.info p {\n  margin: 0px;\n  font-size: 10px;\n  background: #8b0000;\n}\n\nbutton {\n  height: 50px;\n  background: #8b0000;\n  border-radius: 5px;\n  color: white;\n  border: none;\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\n}\n\n.auto {\n  margin-left: auto;\n}\n.review .reviewName input {\n  width: 100%;\n  height: 30px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n}\n.review {\n  justify-content: center;\n}\n.review input {\n  width: 100%;\n  height: 70px;\n  border-radius: 5px;\n}\n.review button {\n  height: 40px;\n  background: #8b0000;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  margin-top: 5px;\n  font-family: \"Lucida Console\", \"Courier New\", monospace;\n  border: none;\n  align-items: center;\n}\n</style>\n"]}]}