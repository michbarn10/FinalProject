{"remainingRequest":"/Users/michaelbarney/CS260/cp3/cp3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/michaelbarney/CS260/cp3/cp3/src/views/vue-dropdown/vue-dropdown.vue?vue&type=style&index=0&id=3dcfa085&lang=scss&scoped=true&","dependencies":[{"path":"/Users/michaelbarney/CS260/cp3/cp3/src/views/vue-dropdown/vue-dropdown.vue","mtime":1618260341061},{"path":"/Users/michaelbarney/CS260/cp3/cp3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/michaelbarney/CS260/cp3/cp3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/michaelbarney/CS260/cp3/cp3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/michaelbarney/CS260/cp3/cp3/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/michaelbarney/CS260/cp3/cp3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/michaelbarney/CS260/cp3/cp3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuL3Z1ZS1kcm9wZG93biI7Cg=="},{"version":3,"sources":["vue-dropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA","file":"vue-dropdown.vue","sourceRoot":"src/views/vue-dropdown","sourcesContent":["<template>\n  <div\n    class=\"dropdown\"\n    @click=\"toggleRiskLevels\"\n    :class=\"{ expanded: isExpanded }\"\n    :style=\"computedStyles\"\n  >\n    <div class=\"dropdown-label-container\">\n      <div class=\"dropdown-label\">\n        <span class=\"text\">\n          {{ (config.prefix ? config.prefix : \"\") + \" \"\n          }}{{ config.placeholder ? config.placeholder : \"\" }}\n        </span>\n        <i class=\"angle-down\" :class=\"{ toggled: isExpanded }\"></i>\n      </div>\n    </div>\n\n    <div v-expand=\"isExpanded\" class=\"options expand\">\n      <div\n        v-for=\"option in configOptions\"\n        class=\"option\"\n        @click=\"setCurrentSelectedOption(option);\"\n      >\n        {{ option.value }}\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"dropdown\",\n  data() {\n    return {\n      isBottomSectionToggled: false,\n      optionsHeight: 0,\n      optionHeight: 35,\n      width: 100,\n      configOptions: [],\n      backgroundColor: \"#cde4f5\",\n      backgroundExpandedColor: \"#fff\",\n      hoverBackgroundColor: \"#0084d4\",\n      border: \"1px solid  #232b35\",\n      borderRadius: 0,\n      textColor: \"#fff\",\n      isExpanded: false\n    };\n  },\n  components: {},\n  props: [\"config\"],\n  computed: {\n    computedStyles: function() {\n      return [\n        { \"--options-height\": this.optionsHeight + \"px\" },\n        { \"--options-height-neg\": \"-\" + this.optionsHeight + \"px\" },\n        { \"--option-height\": this.optionHeight + \"px\" },\n        { \"--main-el-border-radius\": this.borderRadius },\n        { \"--dropdown-width\": this.width + \"px\" },\n        { \"--dropdown-background-color\": this.backgroundColor },\n        { \"--dropdown-expanded-color\": this.backgroundExpandedColor },\n        { \"--dropdown-border\": this.border },\n        { \"--dropdown-hover-background-color\": this.hoverBackgroundColor },\n        { \"--dropdown-default-text-color\": this.textColor }\n      ];\n    }\n  },\n  directives: {\n    expand: {\n      inserted: function(el, binding) {\n        if (binding.value !== null) {\n          function calcHeight() {\n            const currentState = el.getAttribute(\"aria-expanded\");\n            el.classList.add(\"u-no-transition\");\n            el.removeAttribute(\"aria-expanded\");\n            el.style.height = null;\n            el.style.height = el.clientHeight + \"px\";\n            el.setAttribute(\"aria-expanded\", currentState);\n\n            setTimeout(function() {\n              el.classList.remove(\"u-no-transition\");\n            });\n          }\n          el.classList.add(\"expand\");\n          el.setAttribute(\"aria-expanded\", binding.value ? \"true\" : \"false\");\n          calcHeight();\n          window.addEventListener(\"resize\", calcHeight);\n        }\n      },\n      update: function(el, binding) {\n        if (el.style.height && binding.value !== null) {\n          el.setAttribute(\"aria-expanded\", binding.value ? \"true\" : \"false\");\n        }\n      }\n    }\n  },\n  methods: {\n    toggleRiskLevels() {\n      this.isExpanded = !this.isExpanded;\n    },\n    setCurrentSelectedOption(option) {\n      this.$emit(\"setSelectedOption\", option);\n    },\n    setConfigData() {\n      this.configOptions = this.config.options;\n      this.width = this.config.width;\n      this.placeholder = this.config.placeholder;\n      if (this.config.backgroundColor) {\n        this.backgroundColor = this.config.backgroundColor;\n      }\n      if (this.config.backgroundExpandedColor) {\n        this.backgroundExpandedColor = this.config.backgroundExpandedColor;\n      }\n      if (this.config.border) {\n        this.border = this.config.border;\n      }\n      if (this.config.hoverBackgroundColor) {\n        this.hoverBackgroundColor = this.config.hoverBackgroundColor;\n      }\n      if (this.config.textColor) {\n        this.textColor = this.config.textColor;\n      }\n      if (this.config.borderRadius) {\n        this.borderRadius = this.config.borderRadius;\n      }\n    },\n    setOptionsHeight() {\n      this.optionsHeight = this.optionHeight * this.configOptions.length;\n    }\n  },\n  created() {\n    this.setConfigData();\n    this.setOptionsHeight();\n  },\n  beforeUdate() {\n    // this.setOptionsHeight();\n  },\n  mounted() {}\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"./vue-dropdown\";\n</style>\n"]}]}